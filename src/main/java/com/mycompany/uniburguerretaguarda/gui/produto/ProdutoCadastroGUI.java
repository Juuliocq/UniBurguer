package com.mycompany.uniburguerretaguarda.gui.produto;

import com.mycompany.uniburguerretaguarda.model.Categoria;
import com.mycompany.uniburguerretaguarda.model.Produto;
import com.mycompany.uniburguerretaguarda.service.ProdutosService;
import java.awt.BorderLayout;
import java.awt.Image;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

public class ProdutoCadastroGUI extends javax.swing.JFrame {
    
    Produto produto;
    private List<Categoria> categorias = new ArrayList<>();
    private final ProdutosService produtoService = new ProdutosService();
    private boolean imagemValida = false;

    public ProdutoCadastroGUI() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
         DecimalFormat decimal = new DecimalFormat("#,###,###.00");
         NumberFormatter numFormatter = new NumberFormatter(decimal);
         numFormatter.setFormat(decimal);
         numFormatter.setAllowsInvalid(false);
         DefaultFormatterFactory dfFactory = new DefaultFormatterFactory(numFormatter);
         
         txtPreco.setFormatterFactory(dfFactory);
    }
    
    private void carregarCampos() {
        carregarCboCategoria();
        carregarImagem(produto.getImagem());
        
        cboCategoria.setSelectedItem(categorias.stream().filter(cat -> cat.getId() == produto.getTipo_produto()).findFirst().get().getDescricao());
        txtNome.setText(produto.getNome());
        txtPreco.setValue(produto.getPreco());
        txtImagem.setText(produto.getImagem());
        txtObs.setText(produto.getDescricao());
    }

    private void carregarImagem(String img) {
        pnlImagem.removeAll();
        pnlImagem.revalidate();
        pnlImagem.repaint();
        
        pnlImagem.setLayout(new BorderLayout());
        URL url;
        JLabel lbl;
        
        try {
            url = new URL(img);
            Image image = ImageIO.read(url).getScaledInstance(pnlImagem.getWidth(), pnlImagem.getHeight(), Image.SCALE_DEFAULT);
            
            lbl = new JLabel(new ImageIcon(image));
            this.imagemValida = true;
        } catch (Exception ex) {
            this.imagemValida = false;
            lbl = new JLabel("Imagem inválida. Por favor selecione outra!");
        }
        
        pnlImagem.add(lbl, BorderLayout.CENTER);
    }

    private void carregarCboCategoria() {
        DefaultComboBoxModel dml= new DefaultComboBoxModel();
        
        for (int i = 0; i < categorias.size(); i++) {
            dml.addElement(categorias.get(i).getDescricao());
        }
        
        cboCategoria.setModel(dml);
    }
    
    public void incluir(List<Categoria> categorias) {
        produto = new Produto();
        this.categorias = categorias;
        
        carregarCboCategoria();
    }
    
    public void setProduto(Produto produto, List<Categoria> categorias) throws IOException {
        this.produto = produtoService.getProduto(produto.getId());
        this.categorias = categorias;
        
        carregarCampos();
    }
    
    private void salvar() throws Exception {
        if (!imagemValida) {
            JOptionPane.showMessageDialog(this, "É necessário verificar se a imagem é válida!");
            throw new Exception();
        }
        
        produto.setNome(txtNome.getText());
        produto.setTipo_produto(categorias.stream().filter(cat -> cat.getDescricao().equals(cboCategoria.getSelectedItem())).findFirst().get().getId());
        produto.setPreco((double) txtPreco.getValue());
        produto.setImagem(txtImagem.getText());
        produto.setDescricao(txtObs.getText());
        
        produtoService.salvar(produto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvar = new javax.swing.JToggleButton();
        txtNome = new javax.swing.JTextField();
        cboCategoria = new javax.swing.JComboBox<>();
        txtPreco = new javax.swing.JFormattedTextField();
        txtImagem = new javax.swing.JTextField();
        pnlImagem = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        btnImagem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtImagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtImagemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlImagemLayout = new javax.swing.GroupLayout(pnlImagem);
        pnlImagem.setLayout(pnlImagemLayout);
        pnlImagemLayout.setHorizontalGroup(
            pnlImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 454, Short.MAX_VALUE)
        );
        pnlImagemLayout.setVerticalGroup(
            pnlImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        txtObs.setColumns(20);
        txtObs.setLineWrap(true);
        txtObs.setRows(5);
        txtObs.setAutoscrolls(false);
        jScrollPane2.setViewportView(txtObs);

        btnImagem.setText("Verificar Imagem");
        btnImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPreco, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(cboCategoria, 0, 300, Short.MAX_VALUE)
                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txtImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(btnImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                    .addComponent(pnlImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            salvar();
        } catch (Exception ex) {
            Logger.getLogger(ProdutoCadastroGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagemActionPerformed
        carregarImagem(txtImagem.getText());
    }//GEN-LAST:event_btnImagemActionPerformed

    private void txtImagemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImagemKeyReleased
        this.imagemValida = false;
    }//GEN-LAST:event_txtImagemKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImagem;
    private javax.swing.JToggleButton btnSalvar;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlImagem;
    private javax.swing.JTextField txtImagem;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JFormattedTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}
